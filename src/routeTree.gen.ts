/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/solid-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ToolsHeroExperienceUpgradePlannerRouteImport } from './routes/tools/hero-experience-upgrade-planner'
import { Route as ToolsHeroExperienceCalculatorRouteImport } from './routes/tools/hero-experience-calculator'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'

const rootServerRouteImport = createServerRootRoute()

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ToolsHeroExperienceUpgradePlannerRoute =
  ToolsHeroExperienceUpgradePlannerRouteImport.update({
    id: '/tools/hero-experience-upgrade-planner',
    path: '/tools/hero-experience-upgrade-planner',
    getParentRoute: () => rootRouteImport,
  } as any)
const ToolsHeroExperienceCalculatorRoute =
  ToolsHeroExperienceCalculatorRouteImport.update({
    id: '/tools/hero-experience-calculator',
    path: '/tools/hero-experience-calculator',
    getParentRoute: () => rootRouteImport,
  } as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/tools/hero-experience-calculator': typeof ToolsHeroExperienceCalculatorRoute
  '/tools/hero-experience-upgrade-planner': typeof ToolsHeroExperienceUpgradePlannerRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/tools/hero-experience-calculator': typeof ToolsHeroExperienceCalculatorRoute
  '/tools/hero-experience-upgrade-planner': typeof ToolsHeroExperienceUpgradePlannerRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/tools/hero-experience-calculator': typeof ToolsHeroExperienceCalculatorRoute
  '/tools/hero-experience-upgrade-planner': typeof ToolsHeroExperienceUpgradePlannerRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/tools/hero-experience-calculator'
    | '/tools/hero-experience-upgrade-planner'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/tools/hero-experience-calculator'
    | '/tools/hero-experience-upgrade-planner'
  id:
    | '__root__'
    | '/'
    | '/tools/hero-experience-calculator'
    | '/tools/hero-experience-upgrade-planner'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ToolsHeroExperienceCalculatorRoute: typeof ToolsHeroExperienceCalculatorRoute
  ToolsHeroExperienceUpgradePlannerRoute: typeof ToolsHeroExperienceUpgradePlannerRoute
}
export interface FileServerRoutesByFullPath {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/auth/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/auth/$'
  id: '__root__' | '/api/auth/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
}

declare module '@tanstack/solid-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tools/hero-experience-upgrade-planner': {
      id: '/tools/hero-experience-upgrade-planner'
      path: '/tools/hero-experience-upgrade-planner'
      fullPath: '/tools/hero-experience-upgrade-planner'
      preLoaderRoute: typeof ToolsHeroExperienceUpgradePlannerRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tools/hero-experience-calculator': {
      id: '/tools/hero-experience-calculator'
      path: '/tools/hero-experience-calculator'
      fullPath: '/tools/hero-experience-calculator'
      preLoaderRoute: typeof ToolsHeroExperienceCalculatorRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/solid-start/server' {
  interface ServerFileRoutesByPath {
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ToolsHeroExperienceCalculatorRoute: ToolsHeroExperienceCalculatorRoute,
  ToolsHeroExperienceUpgradePlannerRoute:
    ToolsHeroExperienceUpgradePlannerRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
